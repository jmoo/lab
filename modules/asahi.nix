{
  config,
  inputs,
  lib,
  pkgs,
  ...
}:
let
  inherit (lib) mkOption mkDefault mkForce;
in
{
  imports = [
    inputs.nixos-apple-silicon.nixosModules.apple-silicon-support
    ./nixos.nix
  ];

  options = {
    lab.asahi = {
      peripheralFirmwareHash = mkOption {
        type = lib.types.str;
        default = abort ''

          No peripheral firmware hash set.
          ---------------------------------------------------------------------------------
          1. Run `nix-hash --type sha256 --to-sri $(nix-hash --type sha256 --base32 $(nix-store --add-fixed sha256 /boot/asahi/ --recursive))` on the target machine.
          2. Set 'lab.asahi.peripheralFirmwareHash' to the sha256 hash generated by the above command.
          ---------------------------------------------------------------------------------
        '';
      };
    };
  };

  config = {
    boot = {
      # For ` to < and ~ to > (for those with US keyboards)
      extraModprobeConfig = ''
        options hid_apple iso_layout=0
      '';

      initrd = {
        availableKernelModules = [
          "usb_storage"
          "sdhci_pci"
        ];
      };

      # Use the systemd-boot EFI boot loader.
      loader = {
        systemd-boot.enable = true;
        efi.canTouchEfiVariables = false;
      };
    };

    hardware.asahi.peripheralFirmwareDirectory = mkDefault (
      pkgs.requireFile {
        name = "asahi";
        url = "file:///boot/asahi";
        hashMode = "recursive";
        sha256 = config.lab.asahi.peripheralFirmwareHash;
      }
    );

    nixpkgs.hostPlatform = mkForce "aarch64-linux";
  };
}
